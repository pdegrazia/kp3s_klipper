[gcode_macro START_PRINT]
## PrusaSliser: 
# M190 S0
# M109 S0
# START_PRINT EXTRUDER_TEMP={first_layer_temperature[0]} BED_TEMP={first_layer_bed_temperature} MESH_DO=<1|0>
## Cura: 
# M190 S0
# M109 S0
# START_PRINT EXTRUDER_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0} MESH_DO=<1|0>
description: Start routine for the print
variable_retract: 10
gcode:
    # SET_GCODE_OFFSET Z=2.35
    {% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
    {% set bed_temp = params.BED_TEMP|default(70)|float %}
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    {% set mesh = params.MESH_DO|default(0)|int %}
    CLEAR_PAUSE
    M220 S100                                                                   # reset feedrate
    M221 S100                                                                   # reset flowrate
    G90                                                                         # absolute positioning
    M82                                                                         # relative extrusion mode
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}                  # set bed temp
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp}                       # wait for bed temp
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}               # set extruder temp
    G28                                                                         # home
    {% if 'MESH_DO' in params %}
        {% if mesh == 0 %}
            BED_MESH_PROFILE LOAD=default                                   # load existing mesh
        {% else %}
            G29                                                                 # do G29 while heating extruder
            BED_MESH_PROFILE SAVE={bed_temp}
        {% endif %}
    {% endif %}
    G1 X0 Y0 F2000
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}                    # wait for extruder temp
    G0 Z10 F1500                                                                # raise Z
    G92 E0                                                                      # reset extruder
    #Introduce filament in the nozzle
    G91
    G1 E30 F800
    G90

    #Reset extruder
    G92 E0

    ### PRIME###
    G1 Z2.0 F3000 #Move Z Axis up
    G1 X5.4 Y2.4 Z0.2 F5000.0
    G1 X5.4 Y100.0 Z0.28 F1500.0 E15
    # G1 X10.1 Y170.0 Z0.28 F5000.0
    # G1 X10.1 Y40 Z0.2 F1500.0 E15
    G92 E0 #Reset Extruder
    ############
    G1 Z2.0 F3000 #Move Z Axis up


[gcode_macro END_PRINT]
gcode:
    {% set E = printer["gcode_macro START_PRINT"].retract|float %}
    TURN_OFF_HEATERS
    M107                                                                        # turn off fan
    G91                                                                         # relative positioning
    G1 E-{E} F2100                                                              # retract
    G0 X1 Y1 F6000                                                              # wipe
    G0 Z2 F600                                                                  # raise Z
    G90                                                                         # absolute positioning
    G28 X0 Y0 ;Home X and Y
    M84                                                                         # turn off all motors
    BEEP P=200 S=250
    SAVE_UPDATES
# [gcode_macro PRINT_START]
# variable_retract: 0
# variable_extruder: 250
# variable_extruder_pre: 150
# variable_bed: 85
# variable_print_info: 'true'
# variable_state: 'Prepare'
# variable_first: 'true'
# variable_soak: 0.45
# variable_pwm: 1
# variable_avgpwm: 1
# variable_tests: 0
# variable_left: 40
# variable_clean2: False
# gcode:
#   {% set extruder_temp = params.EXTRUDER_TEMP|default(250)|float %}   # Extruder temperature from Slicer
#   {% set bed_temp = params.BED_TEMP|default(85)|float %}             # Bed temperature from Slicer
#   {% set E = printer["gcode_macro PRINT_START"].retract|float %}      # Retract - variable from this macros
#   {% set soak = params.SOAK|default(0.45) %}                          # Extruder temperature from Slicer
#   {% set actPwm = printer.heater_bed.power|float %}                   # Actual PWM from heater_bed.power
# #############  BED temp values  #############
#   # get actual temp from extra sensor or heater sensor
#   {% if 'temperature_sensor bed' in printer %}
#     {% set actBed = printer['temperature_sensor bed'].temperature|int %}
#   {% else %}
#     {% set actBed = printer.heater_bed.temperature|int %}
#   {% endif %}
#   # get max allow bed temp from config. Lower it by 5C to avoid shutdown
#   {% set cfg_bed_max = printer.configfile.settings.heater_bed.max_temp|int - 5 %}
# #############  Prepare Stage #############
#   {% if state == 'Prepare' %}  
# #    _PRINT_AR T="Preparation stage"
#     M117 Preparation stage
#     {% set bed_temp = params.BED_TEMP|default(85)|int %}
#     {% set extruder_temp = params.EXTRUDER_TEMP|default(250)|int %}
#     {% set extruder_temp_pre = (extruder_temp|float * 0.7)|int %}
#     {% set soak = params.SOAK|default(0.45) %}
# #############  Variable setup  #############
#     CLEAR_PAUSE
#     SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"false"'                # macros CANCEL_PRINT must have variable "execute" with value "false"
#     SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=extruder VALUE={extruder_temp}          # extruder temperature
#     SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=extruder_pre VALUE={extruder_temp_pre}  # extruder pre-heat
#     SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=bed VALUE={bed_temp}                    # target bed temperature
#     SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=left VALUE=30                           # counter for PWM calculate
# #############  Heating bed  #############
#     _PRINT_AR T="Heating Bed"
#     {action_respond_info("Heating Bed")}
#     M140 S{bed_temp|int}                                                         # start heating bed and not wait
#     M104 S{extruder_pre|int}  ; heat bed and wait                                # start extruder pre-heat
#     G28                                                                          # homing
#     G90
#     G0 Z20 F6000                                                                 # Z to low 30
#     #M106 S150                                                                    ; switch part cooling ~35% to move air in chamber
#     G28 X Y
#     M190 S{bed_temp|int}                                                                  ; heat bed and wait
#     # PAUSE_BASE                                                                   # PAUSE!!!!
#     # {% set pwm = printer['heater_bed'].power | float %}                          # get PWM from heater_bed
#     # SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=pwm VALUE={pwm}
#     # SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=avgpwm VALUE={pwm}
#     # SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=tests VALUE=1
#     # _PRINT_AR T="{"T:%02d/30 P:%.3f/%.3f" % (left|int,pwm|float,soak|float)}"
#     # # Call the wait macro the first time
#     # SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"HeatSoak"'
#     # UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=0.1
# #############  HeatSoak #############
#   # {% elif state == 'HeatSoak' %}
#   #   M117 HeatSoak
#   #   {action_respond_info("HeatSoak")}
#   #   {% if left == 0 %}
#   #     {% if avgpwm >= soak|float %}
#   #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=pwm VALUE=0                # PWM reset to zero
#   #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=tests VALUE=0              # tests counter reset to zero
#   #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=left VALUE=30              # time counter reset to 30 (30 second)
#   #     {% else %}
#   #       {action_respond_info("Done. Mean PWM: %f" % (avgpwm|float))}
#   #       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Final"'
#   #     {% endif %}
#   #   {% endif %}
#   #   UPDATE_DELAYED_GCODE ID=START_PRINT_WAIT DURATION=1
# #############  Final Stage #############
#   {% elif state == 'Final' %}
#     {action_respond_info("Final Stage")}
#     # set staus back to prepare for the next run 
#     SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'
#     RESUME_BASE
#     #M106 S0
#     M117 Heating Extruder
#     G90
#     G92 E0
#     M117
#     # BED_MESH_CLEAR
#     G28 X Y
#     M117 Loaded default profile
#     BED_MESH_PROFILE LOAD=default
#     {% if 'MESH_DO' in params %}
#         {% if mesh == 0 %}
#             M117 Loaded default profile
#             BED_MESH_PROFILE LOAD=default                                   # load existing mesh
#         {% else %}
#             G29                                                                 # do G29 while heating extruder
#             BED_MESH_PROFILE SAVE={bed_temp}
#         {% endif %}
#     {% endif %}

#     # BED_MESH_CALIBRATE
#     M109 S{extruder|int} ; heat extruder and wait                                                            
#     LINE_PURGE
#   {% endif %}
# #############  Begin of ptinting #############

# [delayed_gcode START_PRINT_WAIT]
# gcode:
#  # Print remaining time
#   {% if printer["gcode_macro PRINT_START"].state == 'HeatSoak' %}
#       {% set pwm = printer['heater_bed'].power | float %}
#       {% set totalpwm = printer["gcode_macro PRINT_START"].pwm|float %}
#       {% set tests = printer["gcode_macro PRINT_START"].tests|int + 1 %}
#       {% set left = printer["gcode_macro PRINT_START"].left|int - 1 %}
#       {% set soak = printer["gcode_macro PRINT_START"].soak | float %}
#       {% set avgpwm = ((totalpwm+pwm)/tests)|float %}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=avgpwm VALUE={avgpwm}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=pwm VALUE={(totalpwm+pwm)|float}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=tests VALUE={tests}
#       SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=left VALUE={left}
#       M117 S{'T:%02d' % left|int}{'/30 P:%.2f' % (avgpwm|float)}{'/%.2f' % (soak|float)}
#   {% endif %}
#   # Check CANCLE_PRINT was executed
#   {% if printer["gcode_macro CANCEL_PRINT"].execute == 'false' %}
#     # Jump back to PRINT_START
#     PRINT_START
#   {% else %}
#     # break loop
#     # insure state is correct for the next print start
#     SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"false"'
#     SET_GCODE_VARIABLE MACRO=PRINT_START VARIABLE=state VALUE='"Prepare"'
# #    UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
#   {% endif %}