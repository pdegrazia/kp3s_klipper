===== Config file =====
[printer]
kinematics = cartesian
max_velocity = 250
max_accel = 1800
max_accel_to_decel = 1800
max_z_velocity = 15
max_z_accel = 100
square_corner_velocity = 5.0

[input_shaper]

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
baud = 250000
restart_method = command

[temperature_sensor HOST]
sensor_type = temperature_host

[temperature_sensor MCU]
sensor_type = temperature_mcu

[virtual_sdcard]
path = /home/paolo/printer_data/gcodes

[gcode_arcs]
resolution = 0.05

[display_status]

[pause_resume]

[respond]

[exclude_object]

[verify_heater heater_bed]
max_error = 120
check_gain_time = 60
hysteresis = 5
heating_gain = 2

[verify_heater extruder]
max_error = 120
check_gain_time = 30
hysteresis = 5
heating_gain = 2

[stepper_x]
step_pin = PE3
dir_pin = PE2
enable_pin = !PE4
full_steps_per_rotation = 200
microsteps = 32
rotation_distance = 40
endstop_pin = !PA15
position_endstop = 0
position_min = 0
position_max = 180
homing_speed = 50
homing_retract_dist = 0
second_homing_speed = 3

[stepper_y]
step_pin = PE0
dir_pin = PB9
enable_pin = !PE1
full_steps_per_rotation = 200
microsteps = 32
rotation_distance = 40
endstop_pin = !PA12
position_endstop = -2.5
position_min = -2.5
position_max = 180
homing_speed = 50
homing_retract_dist = 0
second_homing_speed = 3

[stepper_z]
step_pin = PB5
dir_pin = !PB4
enable_pin = !PB8
full_steps_per_rotation = 200
microsteps = 32
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 190
homing_retract_dist = 10.0
second_homing_speed = 5
position_min = -5

[safe_z_home]
home_xy_position = 90,90
speed = 50
z_hop = 10
z_hop_speed = 15

[bltouch]
sensor_pin = ^PC4
control_pin = PA8
pin_up_touch_mode_reports_triggered = False
x_offset = 2.9
y_offset = -0.4
z_offset = 2.665

[bed_mesh]
speed = 100
mesh_min = 10, 10
mesh_max = 150, 150
algorithm = bicubic
probe_count = 4,4

[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_margin_enable = False
variable_margin_size = 5
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
variable_display_parameters = True
gcode = 
	
	{% if display_parameters == True %}
	{ action_respond_info("led_enable  : %d" % (led_enable))  }
	{ action_respond_info("status_macro: \'%s\'" % (status_macro))  }
	{ action_respond_info("fuzz_enable : %d" % (fuzz_enable))  }
	{ action_respond_info("fuzz_min    : %f" % (fuzz_min))  }
	{ action_respond_info("fuzz_max    : %f" % (fuzz_max))  }
	{ action_respond_info("probe_dock_enable: %d" % (probe_dock_enable))  }
	{ action_respond_info("attach_macro: \'%s\'" % (attach_macro))  }
	{ action_respond_info("detach_macro: \'%s\'" % (detach_macro))  }
	{% endif %}
	
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set probe_count = printer.configfile.settings.bed_mesh.probe_count %}
	{% set probe_count = probe_count if probe_count|length > 1 else probe_count * 2  %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (probe_count[0] - 1)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (probe_count[1] - 1)  %}
	{% set x_min = all_points | map(attribute=0) | min | default(bed_mesh_min[0]) %}
	{% set y_min = all_points | map(attribute=1) | min | default(bed_mesh_min[1]) %}
	{% set x_max = all_points | map(attribute=0) | max | default(bed_mesh_max[0]) %}
	{% set y_max = all_points | map(attribute=1) | max | default(bed_mesh_max[1]) %}
	
	{% if margin_enable == False %}
	{% set margin_size = 0 %}
	{% endif %}
	
	{ action_respond_info("{} object points, clamping to bed mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% set fuzz_range = range((fuzz_min * 100) | int, (fuzz_max * 100) | int + 1) %}
	{% set x_min = (bed_mesh_min[0] + fuzz_max - margin_size, x_min) | max - (fuzz_range | random / 100.0) %}
	{% set y_min = (bed_mesh_min[1] + fuzz_max - margin_size, y_min) | max - (fuzz_range | random / 100.0) %}
	{% set x_max = (bed_mesh_max[0] - fuzz_max + margin_size, x_max) | min + (fuzz_range | random / 100.0) %}
	{% set y_max = (bed_mesh_max[1] - fuzz_max + margin_size, y_max) | min + (fuzz_range | random / 100.0) %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], x_min - margin_size ] | max %}
	{% set y_min = [ bed_mesh_min[1], y_min - margin_size ] | max %}
	{% set x_max = [ bed_mesh_max[0], x_max + margin_size ] | min %}
	{% set y_max = [ bed_mesh_max[1], y_max + margin_size ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | round(method='ceil') | int) + 1 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | round(method='ceil') | int) + 1 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro SETUP_KAMP_MESHING]
gcode = 
	SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
	SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=led_enable   VALUE={params.LED_ENABLE|default(False)|int}
	SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=status_macro VALUE='"{params.STATUS_MACRO|default('status_meshing')|string}"'
	
	SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_enable VALUE={params.FUZZ_ENABLE|default(False)|int}
	SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_min    VALUE={params.FUZZ_MIN|default(0)|float}
	SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=fuzz_max    VALUE={params.FUZZ_MAX|default(4)|float}
	
	SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=probe_dock_enable  VALUE={params.PROBE_DOCK_ENABLE|default(False)|int}
	SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=attach_macro VALUE='"{params.ATTACH_MACRO|default('Attach_Probe')|string}"'
	SET_GCODE_VARIABLE MACRO=BED_MESH_CALIBRATE VARIABLE=detach_macro VALUE='"{params.DETACH_MACRO|default('Dock_Probe')|string}"'

[thermistor Kingroon_Calibrated B3950]
temperature1 = 25.0
resistance1 = 103180.0
temperature2 = 150.0
resistance2 = 1366.2
temperature3 = 250.0
resistance3 = 168.6

[extruder]
step_pin = PD6
dir_pin = !PD3
enable_pin = !PB3
full_steps_per_rotation = 200
microsteps = 32
rotation_distance = 7.940
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PC3
sensor_type = Kingroon_Calibrated B3950
sensor_pin = PC1
control = pid
pid_kp = 19.0
pid_ki = 1.34
pid_kd = 67.5
min_temp = 0
max_temp = 300
pressure_advance = 0.05

[heater_bed]
heater_pin = PA0
sensor_type = Kingroon_Calibrated B3950
sensor_pin = PC0
control = pid
pid_kp = 40.68
pid_ki = 7.93
pid_kd = 139.15
min_temp = 0
max_temp = 130

[bed_screws]
screw1 = 20,20
screw2 = 160,20
screw3 = 160,160
screw4 = 20,160

[fan]
pin = PB1
kick_start_time = 0.6
cycle_time = 0.15
shutdown_speed = 0
hardware_pwm = false

[heater_fan my_nozzle_fan]
pin = PB0
heater = extruder
heater_temp = 50.0
kick_start_time = 0.6
cycle_time = 0.15
fan_speed = 1.0
shutdown_speed = 1

[gcode_macro _PRINT_AR]
description = Helper: Action response
gcode = 
	
	
	
	M117 {'%s' % (params.T|string)}
	
	{action_respond_info("%s" % (params.T|string))}

[gcode_macro PARK]
gcode = 
	PAUSE

[gcode_macro M600]
description = Filament change macro
gcode = 
	{% if printer.toolhead.homed_axes != "xyz" %}
	M118 Homing
	G28
	{% endif %}
	{% if printer.extruder.can_extrude == 0 %}
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z > (max_z - 20.0) %}
	{% set z_safe = max_z %}
	{% else %}
	{% set z_safe = (act_z + 20.0) %}
	{% endif %}
	G91
	G1 Z{z_safe}
	G90
	G1 X0 Y0 F2100
	M118 Acquiring temperature
	M109 S200
	{% endif %}
	{% if printer.pause_resume.is_paused == 0 %}
	PAUSE
	{% endif %}
	M118 First UNLOAD, then LOAD new and RESUME when ready

[gcode_macro UNLOAD]
description = Unload filament helper
gcode = 
	{% if printer.pause_resume.is_paused == 1 %}
	{% if printer.extruder.can_extrude == 1 %}
	G91
	G1 E5 F300
	G1 E-50 F300
	G90
	{% else %}
	RESPOND TYPE=error MSG="Extrude below minimum temp"
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG="Printer must be paused"
	{% endif %}

[gcode_macro LOAD]
description = Load filament helper
gcode = 
	{% if printer.pause_resume.is_paused == 1 %}
	{% if printer.extruder.can_extrude == 1 %}
	G91
	G1 E20 F300
	G90
	{% else %}
	RESPOND TYPE=error MSG="Extrude below minimum temp"
	{% endif %}
	{% else %}
	RESPOND TYPE=error MSG="Printer must be paused"
	{% endif %}

[gcode_macro LOW_TEMP_CHECK_T]
gcode = 
	{% if printer.extruder.target != 0 %}
	{% if printer.extruder.temperature < printer.extruder.target %}
	
	M109 S{printer.extruder.target|float}
	{% endif %}
	{% else %}
	{% if printer.extruder.target < T %}
	
	M109 S{T}
	{% endif %}
	{% endif %}

[gcode_macro M900]
description = Set pressure advance
gcode = 
	SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)}

[gcode_macro Bed_Mesh]
gcode = 
	{% if printer.toolhead.homed_axes != "xyz" %}
	G28
	{% endif %}
	SAVE_GCODE_STATE NAME=G29_STATE
	{% if T|int > 30 %}
	M140 S{T}
	M190 S{T}
	{% endif %}
	BED_MESH_CALIBRATE
	G0 X10 Y10 F6000

[gcode_macro LINE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.4
variable_purge_amount = 10
variable_line_length = 50
variable_flow_rate = 12
variable_x_default = 10
variable_y_default = 10
variable_distance_to_object_y = 10
variable_display_parameters = True
gcode = 
	
	{% if display_parameters == True %}
	{ action_respond_info("adaptive_enable : %d" % (adaptive_enable))  }
	{ action_respond_info("z_height        : %f" % (z_height))  }
	{ action_respond_info("purge_amount    : %f" % (purge_amount))  }
	{ action_respond_info("line_length     : %f" % (line_length))  }
	{ action_respond_info("flow_rate       : %f" % (flow_rate))  }
	{ action_respond_info("x_default       : %f" % (x_default))  }
	{ action_respond_info("y_default       : %f" % (y_default))  }
	{ action_respond_info("distance_to_object_y : %f" % (distance_to_object_y))  }
	{% endif %}
	
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default)) %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default)) %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set nozzle_dia = printer.configfile.config.extruder.nozzle_diameter | float %}
	{% set cross_section = nozzle_dia * z_height | float %}
	{% set purge_move_speed = (cross_section * flow_rate) * 60 | float %}
	{% set travel_speed = (printer.toolhead.max_velocity) * 60 | float %}
	
	G92 E0
	G0 F{travel_speed}
	G90
	G0 X{x_origin} Y{y_origin - distance_to_object_y}
	G0 Z{z_height}
	M83
	G1 X{x_origin + line_length} E{purge_amount} F{purge_move_speed}
	G1 E-.5 F200
	G92 E0
	M82
	G0 Z{z_height * 2} F{travel_speed}

[gcode_macro SETUP_LINE_PURGE]
gcode = 
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=line_length  VALUE={params.LINE_LENGTH|default(50)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(12)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}
	SET_GCODE_VARIABLE MACRO=LINE_PURGE  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}

[gcode_macro _FILAMENT_BALL]
description = Helper: Round the filament tip
gcode = 
	
	{% set wait = params.WAIT|default(0) %}
	
	SAVE_GCODE_STATE NAME=STATE_FILAMENT_BALL
	
	G92 E0
	M82
	G1 E2 F3600
	G1 E0 F3600
	G1 E4 F3600
	G1 E0 F3600
	G1 E8 F3600
	G1 E0 F3600
	M83
	G1 E-25 F3600
	G4 P{wait|int * 1000}
	RESTORE_GCODE_STATE NAME=STATE_FILAMENT_BALL

[gcode_macro PAUSE]
rename_existing = PAUSE_BASE
gcode = 
	{% set E = params.E|default(1.7) %}
	{% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
	{% set y_park = printer.toolhead.axis_minimum.y|float + 5.0 %}
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 2.0) %}
	{% set z_safe = 2.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	SAVE_GCODE_STATE NAME=PAUSE_state
	PAUSE_BASE
	G91
	G1 E-{E} F2100
	G1 Z{z_safe} F900
	G90
	G0 X{x_park} Y{y_park} F6000
	G91

[gcode_macro RESUME]
rename_existing = RESUME_BASE
gcode = 
	{% set E = params.E|default(1) %}
	G91
	G1 E{E} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	RESUME_BASE

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
variable_execute = 'false'
gcode = 
	
	SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE='"true"'
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	M117 Cancel
	BASE_CANCEL_PRINT
	G28 X Y

[gcode_macro START_PRINT]
description = Start routine for the print
variable_retract = 10
gcode = 
	
	{% set extruder_temp = params.EXTRUDER_TEMP|default(240)|float %}
	{% set bed_temp = params.BED_TEMP|default(70)|float %}
	{% set E = printer["gcode_macro START_PRINT"].retract|float %}
	{% set mesh = params.MESH_DO|default(0)|int %}
	CLEAR_PAUSE
	M220 S100
	M221 S100
	G90
	M82
	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}
	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp}
	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
	G28
	{% if 'MESH_DO' in params %}
	{% if mesh == 0 %}
	BED_MESH_PROFILE LOAD=default
	{% else %}
	G29
	BED_MESH_PROFILE SAVE={bed_temp}
	{% endif %}
	{% endif %}
	G1 X0 Y0 F2000
	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp}
	G0 Z10 F1500
	G92 E0
	
	G91
	G1 E30 F800
	G90
	
	
	G92 E0
	
	
	G1 Z2.0 F3000
	G1 X5.4 Y2.4 Z0.2 F5000.0
	G1 X5.4 Y100.0 Z0.28 F1500.0 E15
	
	
	G92 E0
	
	G1 Z2.0 F3000

[gcode_macro END_PRINT]
gcode = 
	{% set E = printer["gcode_macro START_PRINT"].retract|float %}
	TURN_OFF_HEATERS
	M107
	G91
	G1 E-{E} F2100
	G0 X1 Y1 F6000
	G0 Z2 F600
	G90
	G28 X0 Y0
	M84
	BEEP P=200 S=250
	SAVE_UPDATES

[bed_mesh default]
version = 1
points = 
	-0.136250, -0.123750, -0.136250, -0.146250
	-0.030000, -0.005000, -0.001250, -0.033750
	-0.025000, 0.008750, -0.015000, -0.007500
	-0.165000, -0.133750, -0.111250, -0.082500
x_count = 4
y_count = 4
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 10.0
max_x = 149.98000000000002
min_y = 10.0
max_y = 149.98
=======================
Loaded MCU 'mcu' 107 commands (v0.11.0-267-g01ed8096 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 INITIAL_PINS=!PC6,!PD13 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PB11,PB10 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Args: ['/home/paolo/klipper/klippy/klippy.py', '/home/paolo/printer_data/config/printer.cfg', '-I', '/home/paolo/printer_data/comms/klippy.serial', '-l', '/home/paolo/printer_data/logs/klippy.log', '-a', '/home/paolo/printer_data/comms/klippy.sock']
Git version: 'v0.12.0-102-g9f41f53c'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper
CPU: 4 core ARMv7 Processor rev 4 (v7l)
Python: '3.11.2 (main, Mar 13 2023, 12:18:29) [GCC 12.2.0]'
webhooks client 1970328496: {'program': 'Moonraker', 'version': 'v0.8.0-308-g71b46cc'}
=============== Log rollover at Sun Feb 11 01:06:42 2024 ===============
b'Got EOF when reading from device'
Timeout with MCU 'mcu' (eventtime=785228.992005)
Transition to shutdown state: Lost communication with MCU 'mcu'
Dumping gcode input 0 blocks
Dumping 20 requests for client 1970328496
Received 695602.690027: b'{"id": 1716085392, "method": "register_remote_method", "params": {"response_template": {"method": "shutdown_machine"}, "remote_method": "shutdown_machine"}}'
Received 695602.693015: b'{"id": 1716085392, "method": "register_remote_method", "params": {"response_template": {"method": "reboot_machine"}, "remote_method": "reboot_machine"}}'
Received 695602.695514: b'{"id": 1716085392, "method": "register_remote_method", "params": {"response_template": {"method": "pause_job_queue"}, "remote_method": "pause_job_queue"}}'
Received 695602.697949: b'{"id": 1716085392, "method": "register_remote_method", "params": {"response_template": {"method": "start_job_queue"}, "remote_method": "start_job_queue"}}'
Received 695602.703746: b'{"id": 1726481744, "method": "objects/query", "params": {"objects": {"heaters": null}}}'
Received 695602.704395: b'{"id": 1726482704, "method": "objects/query", "params": {"objects": {"heaters": null}}}'
Received 695602.874210: b'{"id": 1736581424, "method": "info", "params": {}}'
Received 695602.890493: b'{"id": 1726612336, "method": "objects/list", "params": {}}'
Received 695602.931527: b'{"id": 1726481744, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null, "temperature_sensor HOST": null, "temperature_sensor MCU": null, "heater_bed": null, "extruder": null}, "response_template": {"method": "process_status_update"}}}'
Received 695603.181679: b'{"id": 1716088720, "method": "objects/subscribe", "params": {"objects": {"webhooks": null, "print_stats": null, "temperature_sensor HOST": null, "temperature_sensor MCU": null, "heater_bed": null, "extruder": null}, "response_template": {"method": "process_status_update"}}}'
Received 695603.432429: b'{"id": 1726481744, "method": "objects/subscribe", "params": {"objects": {"gcode": null, "webhooks": null, "configfile": null, "mcu": null, "heaters": null, "temperature_host HOST": null, "temperature_sensor HOST": null, "temperature_sensor MCU": null, "gcode_move": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "pause_resume": null, "exclude_object": null, "probe": null, "bed_mesh": null, "gcode_macro BED_MESH_CALIBRATE": null, "gcode_macro SETUP_KAMP_MESHING": null, "heater_bed": null, "bed_screws": null, "fan": null, "heater_fan my_nozzle_fan": null, "gcode_macro _PRINT_AR": null, "gcode_macro PARK": null, "gcode_macro M600": null, "gcode_macro UNLOAD": null, "gcode_macro LOAD": null, "gcode_macro LOW_TEMP_CHECK_T": null, "gcode_macro M900": null, "gcode_macro Bed_Mesh": null, "gcode_macro LINE_PURGE": null, "gcode_macro SETUP_LINE_PURGE": null, "gcode_macro _FILAMENT_BALL": null, "gcode_macro PAUSE": null, "gcode_macro RESUME": null, "gcode_macro CANCEL_PRINT": null, "gcode_macro START_PRINT": null, "gcode_macro END_PRINT": null, "stepper_enable": null, "motion_report": null, "query_endstops": null, "idle_timeout": null, "system_stats": null, "manual_probe": null, "toolhead": null, "extruder": null}, "response_template": {"method": "process_status_update"}}}'
Received 695603.955927: b'{"id": 1736583696, "method": "gcode/help", "params": {}}'
Received 695607.673855: b'{"id": 1726955120, "method": "gcode/script", "params": {"script": "SET_HEATER_TEMPERATURE HEATER=extruder TARGET=210"}}'
Received 695610.728481: b'{"id": 1726954576, "method": "gcode/script", "params": {"script": "SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=70"}}'
Received 696037.765267: b'{"id": 1726602608, "method": "gcode/script", "params": {"script": "SDCARD_PRINT_FILE FILENAME=\\"laserCorner.gcode\\""}}'
Received 775805.507464: b'{"id": 1747094032, "method": "info", "params": {}}'
Received 775805.523205: b'{"id": 1726763312, "method": "objects/list", "params": {}}'
Received 775805.657235: b'{"id": 1726642736, "method": "objects/subscribe", "params": {"objects": {"gcode": null, "webhooks": null, "configfile": null, "mcu": null, "heaters": null, "temperature_host HOST": null, "temperature_sensor HOST": null, "temperature_sensor MCU": null, "gcode_move": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "pause_resume": null, "exclude_object": null, "probe": null, "bed_mesh": null, "gcode_macro BED_MESH_CALIBRATE": null, "gcode_macro SETUP_KAMP_MESHING": null, "heater_bed": null, "bed_screws": null, "fan": null, "heater_fan my_nozzle_fan": null, "gcode_macro _PRINT_AR": null, "gcode_macro PARK": null, "gcode_macro M600": null, "gcode_macro UNLOAD": null, "gcode_macro LOAD": null, "gcode_macro LOW_TEMP_CHECK_T": null, "gcode_macro M900": null, "gcode_macro Bed_Mesh": null, "gcode_macro LINE_PURGE": null, "gcode_macro SETUP_LINE_PURGE": null, "gcode_macro _FILAMENT_BALL": null, "gcode_macro PAUSE": null, "gcode_macro RESUME": null, "gcode_macro CANCEL_PRINT": null, "gcode_macro START_PRINT": null, "gcode_macro END_PRINT": null, "stepper_enable": null, "motion_report": null, "query_endstops": null, "idle_timeout": null, "system_stats": null, "manual_probe": null, "toolhead": null, "extruder": null}, "response_template": {"method": "process_status_update"}}}'
Received 775806.027372: b'{"id": 1726952144, "method": "gcode/help", "params": {}}'
Received 775816.715142: b'{"id": 1726954992, "method": "gcode/script", "params": {"script": "SDCARD_PRINT_FILE FILENAME=\\"laserCorner.gcode\\""}}'
gcode state: absolute_coord=True absolute_extrude=True base_position=[0.0, 0.0, 0.0, 6682.82510000016] last_position=[0.0, -2.5, 48.73929559563996, 6672.82510000016] homing_position=[0.0, 0.0, 0.0, 0.0] speed_factor=0.016666666666666666 extrude_factor=1.0 speed=10.0
Reactor garbage collection: (778558.224305556, 0.0, 0.0)
